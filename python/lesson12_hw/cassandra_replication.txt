Cassandra забезпечує реплікацію та горизонтальне масштабування через кілька ключових механізмів:

Реплікація в Cassandra:

Реплікація за допомогою кластерів:

Cassandra використовує кластерну архітектуру, де дані реплікуються на кілька вузлів у кластері.
Кожен вузол може зберігати частину даних, але копії цих даних зберігаються і на інших вузлах для забезпечення відмовостійкості.

Механізм реплікації:

Кількість реплік:
Кількість копій даних визначається налаштуванням replication factor (RF).
Наприклад, якщо RF дорівнює 3, то кожен елемент даних буде збережений на трьох різних вузлах.

Реплікаційна стратегія:
SimpleStrategy:
використовується для одно- або дво-регіональних кластерів. Дані зберігаються в порядку певної стратегії.

NetworkTopologyStrategy:
використовується для багаторегіональних кластерів, що дозволяє забезпечити реплікацію через кілька географічно розподілених центрів обробки даних.

Реплікація та консистентність:
Cassandra підтримує різні рівні консистентності для читання та запису.
Це дає змогу вибирати, скільки реплік повинно підтвердити операцію перед тим, як вона буде визнана завершеною (наприклад, ONE, QUORUM, ALL).

Горизонтальне масштабування:
Додавання нових вузлів:
Cassandra підтримує горизонтальне масштабування без зупинки системи.
Це означає, що можна додавати нові вузли до кластера, і дані автоматично перерасподіляються між вузлами для забезпечення рівномірного навантаження.

Механізм розподілу даних:

Consistent Hashing:
Cassandra використовує consistent hashing для розподілу даних серед вузлів.
Кожен вузол має діапазон ключів, і дані зберігаються на вузлах відповідно до хешу їхнього ключа.

VNodes (Virtual Nodes):
Замість того, щоб кожен вузол обробляв лише одну ділянку хеш-простору,
Cassandra використовує віртуальні вузли для більш рівномірного розподілу даних і полегшення додавання нових вузлів у кластер.

Балансування навантаження:
Завдяки consistent hashing та використанню віртуальних вузлів Cassandra автоматично виконує балансування навантаження
при додаванні або видаленні вузлів, що дозволяє ефективно масштабувати систему без значних затримок.

Завдяки цим механізмам Cassandra може масштабуватися горизонтально,
додаючи нові вузли для підвищення продуктивності та забезпечення надійності,
при цьому забезпечуючи високу доступність і реплікацію даних.