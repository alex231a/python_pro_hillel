Висновок

Якщо необхідно забезпечити простий доступ до атрибутів із можливістю перевірки значень -
найкращим вибором буде використання @property.
Він забезпечує зрозумілий, простий синтаксис, легку читаємість і достатній рівень контролю.

Якщо потрібно повторно використовувати логіку валідації та доступу в різних класах,
варто використовувати дескриптори, оскільки вони дозволяють створювати масштабовані та гнучкі рішення.

Сеттер/геттер підходить для простих випадків.

Який підхід обрати в даному випадку?
У випадку з класом Product, де потрібно контролювати значення ціни та валюту з можливістю масштабування
(наприклад, додавання нових валют), дескриптори є найкращим вибором.

Вони дозволяють розділити логіку валідації та роботи з атрибутами (ціною та валютою).
Можна використовувати їх у багатьох класах без дублювання коду.
Гнучкість — легко додати нові правила чи розширити функціонал (наприклад, логування змін).
Підходить для складних об'єктів, де контроль важливий.
Якщо ж клас був би простішим (лише одна ціна без конвертації), то варто було б використати @property,
оскільки він забезпечує хорошу читабельність та простоту.